{"version":3,"sources":["components/HomePage/HomePage.module.css","img/hum.jpg","img/elf.jpg","img/dworf.jpg","img/hobbit.jpg","components/HomePage/HomePage.jsx","components/redux/homePageReducer.js","App.js","serviceWorker.js","components/redux/store.js","index.js"],"names":["module","exports","HomePage","props","className","style","wrap","human","map","hm","key","id","humans","header","info","name","avatar","src","hum_img","alt","btn_profile","btn_edit","btn_del","elf","el","elfs","elf_img","dworf","dw","dworfs","dworf_img","hobbit","hb","hobbits","hobb_img","SET_DATA","initialState","setData","type","homePageReducer","state","action","connect","homePage","getData","dispatch","a","WebSocket","wbs","onopen","e","send","cmd","onmessage","event","data","JSON","parse","filter","item","Object","keys","some","useEffect","initData","exact","path","render","to","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30c9ce7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"HomePage_wrap__2ODKc\",\"humans\":\"HomePage_humans__2JP_q\",\"elfs\":\"HomePage_elfs__3jgqC\",\"dworfs\":\"HomePage_dworfs__iNErU\",\"hobbits\":\"HomePage_hobbits__251jt\",\"header\":\"HomePage_header__3hlEY\",\"name\":\"HomePage_name__2U0WO\",\"info\":\"HomePage_info__2tWS8\",\"btn_profile\":\"HomePage_btn_profile__2NxdR\",\"btn_edit\":\"HomePage_btn_edit__3yx5U\",\"btn_del\":\"HomePage_btn_del__1CMi6\",\"avatar\":\"HomePage_avatar__3ELVd\"};","module.exports = __webpack_public_path__ + \"static/media/hum.88d6d2e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elf.82f509ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dworf.fa3bacc2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hobbit.ac4177b1.jpg\";","import React from 'react';\nimport style from './HomePage.module.css';\nimport hum_img from '../../img/hum.jpg';\nimport elf_img from '../../img/elf.jpg';\nimport dworf_img from '../../img/dworf.jpg';\nimport hobb_img from '../../img/hobbit.jpg';\n\n\n\nconst HomePage = (props) => {\n\n\n    return (\n        <div className={style.wrap}>\n\n            {props.human.map(hm => (\n                <div key={hm.id} className={style.humans}>\n                    <div className={style.header}>\n                        <h2>Human</h2>\n                        <button><i className=\"fas fa-plus\"></i></button>\n                    </div>\n                    <div className={style.info}>\n                        <div className={style.name}>\n                            <div className={style.avatar}><img src={hum_img} alt=\"avatar\"/></div>\n                            <p>Id: {hm.id}</p>\n                            <p>{hm.name}</p>\n                        </div>\n                        <div className={style.btn_profile}>\n                            <button className={style.btn_edit}><i className='fas fa-edit'></i></button>\n                            <button className={style.btn_del}><i className='fas fa-trash'></i></button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n\n            {props.elf.map(el => (\n                <div key={el.id} className={style.elfs}>\n                    <div className={style.header}>\n                        <h2>Elf</h2>\n                        <button><i className=\"fas fa-plus\"></i></button>\n                    </div>\n                    <div className={style.info}>\n                        <div className={style.name}>\n                            <div className={style.avatar}><img src={elf_img} alt=\"avatar\"/></div>\n                            <p>Id: {el.id}</p>\n                            <p>{el.name}</p>\n                        </div>\n                        <div className={style.btn_profile}>\n                            <button className={style.btn_edit}><i className='fas fa-edit'></i></button>\n                            <button className={style.btn_del}><i className='fas fa-trash'></i></button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n\n            {props.dworf.map(dw => (\n                <div key={dw.id} className={style.dworfs}>\n                    <div className={style.header}>\n                        <h2>Dworf</h2>\n                        <button><i className=\"fas fa-plus\"></i></button>\n                    </div>\n                    <div className={style.info}>\n                        <div className={style.name}>\n                            <div className={style.avatar}><img src={dworf_img} alt=\"avatar\"/></div>\n                            <p>Id: {dw.id}</p>\n                            <p>{dw.name}</p>\n                        </div>\n                        <div className={style.btn_profile}>\n                            <button className={style.btn_edit}><i className='fas fa-edit'></i></button>\n                            <button className={style.btn_del}><i className='fas fa-trash'></i></button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n\n            {props.hobbit.map(hb => (\n                <div key={hb.id} className={style.hobbits}>\n                    <div className={style.header}>\n                        <h2>Hobbit</h2>\n                        <button><i className=\"fas fa-plus\"></i></button>\n                    </div>\n                    <div className={style.info}>\n                        <div className={style.name}>\n                            <div className={style.avatar}><img src={hobb_img} alt=\"avatar\"/></div>\n                            <p>Id: {hb.id}</p>\n                            <p>{hb.name}</p>\n                        </div>\n                        <div className={style.btn_profile}>\n                            <button className={style.btn_edit}><i className='fas fa-edit'></i></button>\n                            <button className={style.btn_del}><i className='fas fa-trash'></i></button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default HomePage;","const SET_DATA = 'my-app/app/SET_DATA';\n\n\nlet initialState = {\n  human: [],\n  elf: [],\n  dworf: [],\n  hobbit: [],\n};\n\nfunction homePageReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case SET_DATA:\n      return {\n        ...state,\n        human: action.human,\n        elf: action.elf, \n        dworf: action.dworf, \n        hobbit: action.hobbit\n      }\n\n\n    default:\n      return state;\n  }\n}\n\n// action\nexport const setData = (human, elf, dworf, hobbit) => ({ type: SET_DATA, human, elf, dworf, hobbit});\n\n//thunk\n\nexport const getData = () => async (dispatch) => {\n  const wbs = await new WebSocket('ws://testapi.marit.expert:3004');\n\n  wbs.onopen = function (e) {\n    wbs.send({ cmd: \"get_list\" })\n  }\n\n  wbs.onmessage = function (event) {\n    const data = JSON.parse(event.data);\n\n    const elf = data.filter(item => {\n      return Object.keys(item).some(key => {\n          return item[key] === 'Elf'\n      })\n  });\n\n    const human = data.filter(item => {\n      return Object.keys(item).some(key => {\n          return item[key] === 'Human' \n      })\n  });\n\n    const dworf = data.filter(item => {\n        return Object.keys(item).some(key => {\n            return item[key] === 'Dworf'\n        })\n    });\n\n    const hobbit = data.filter(item => {\n        return Object.keys(item).some(key => {\n            return item[key] === 'Hobbit'\n        });\n    });\n\n    dispatch(setData(human, elf, dworf, hobbit));\n  }\n}\n\n\n\nexport default homePageReducer;","import React, {useEffect} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { connect } from 'react-redux';\n\n//components\nimport HomePage from './components/HomePage/HomePage'\nimport {getData} from './components/redux/homePageReducer'\n\n\n\nfunction App(props) {\n\n  useEffect(() => {\n    initData()\n}, [])\n\nconst initData = () => {\n  props.getData()\n}\n  return (\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to={'/table'}/>} />\n        <Route path=\"/table\" render={() => <HomePage \n            human={props.human}\n            elf={props.elf}\n            dworf={props.dworf}\n            hobbit={props.hobbit}/>}/>     \n      </Switch>\n  );\n}\n\nlet mapStateToProps = (state) => {\n  return {\n       human: state.homePage.human,\n       elf: state.homePage.elf,\n       dworf: state.homePage.dworf,\n       hobbit: state.homePage.hobbit,\n  }\n}\n\nexport default connect(mapStateToProps, {getData})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport homePageReducer from './homePageReducer';\nimport thunkMiddleware from 'redux-thunk';\n\nconst reducers = combineReducers({homePage: homePageReducer});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./components/redux/store\"\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}